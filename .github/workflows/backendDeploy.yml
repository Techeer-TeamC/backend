name: Deploy Backend to Amazon ECS
on:
  push:
    branches:
      - 'feature/deploy'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Set Application.yml Property
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.datasource.username: ${{ secrets.DATASOURCE_NAME }}
          spring.datasource.password: ${{ secrets.DATASOURCE_PASSWORD }}
          spring.datasource.url: ${{ secrets.DATASOURCE_URL }}

      - name: Set Application-oauth.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-oauth.yml
        env:
          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          spring.security.oauth2.client.registration.google.client-secret : ${{ secrets.GOOGLE_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.google.scope: ${{ secrets.GOOGLE_SCOPE }}
          spring.security.oauth2.client.registration.kakao.client-id: ${{ secrets.KAKAO_CLIENT_ID }}
          spring.security.oauth2.client.registration.kakao.redirect-uri: ${{ secrets.KAKAO_REDIRECT_ID }}
          spring.security.oauth2.client.registration.kakao.client-authentication-method: ${{ secrets.KAKAO_CLIENT_METHOD }}
          spring.security.oauth2.client.registration.kakao.authorization-grant-type: ${{ secrets.KAKAO_AUTH_TYPE }}
          spring.security.oauth2.client.registration.kakao.client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.kakao.scpoe: ${{ secrets.KAKAO_SCOPE }}
          spring.security.oauth2.client.registration.kakao.client-name: ${{ secrets.KAKAO_CLIENT_NAME }}
          spring.security.oauth2.client.provider.kakao.authorization-uri: ${{ secrets.KAKAO_AUTH_URI }}
          spring.security.oauth2.client.provider.kakao.token-uri: ${{ secrets.KAKAO_TOKEN_URI }}
          spring.security.oauth2.client.provider.kakao.user-info-uri: ${{ secrets.KAKAO_USER_INFO_URI }}
          spring.security.oauth2.client.provider.kakao.user-name-attribute: ${{ secrets.KAKAO_USER_NAME_ATTRIBUTE }}

      - name: Set Application-secret.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-secret.yml
        env:
          jwt.secret: ${{ secrets.JWT_SECRET }}

      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: teamc-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build --platform=linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition backend --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: backend_container
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: backend
          cluster: fishIt
          wait-for-service-stability: true
